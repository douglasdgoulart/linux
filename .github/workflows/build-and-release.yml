name: Build and Release Linux

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Get branch name
        id: branch_name
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "branch=$(git branch -r --contains ${GITHUB_REF} | grep -v HEAD | head -n1 | sed 's/.*origin\///')" >> $GITHUB_OUTPUT
          else
            echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: douglasdgoulart
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build main image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          load: true
          tags: linux-builder:latest
          build-args: |
            BRANCH=${{ steps.branch_name.outputs.branch }}
            REPO_URL=https://github.com/${{ github.repository }}.git

      - name: Extract artifacts
        run: |
          # Create a container from the image
          container_id=$(docker create linux-builder:latest)
          
          # Create artifacts directory
          mkdir -p artifacts
          
          # Copy files from container
          docker cp $container_id:/linux-build/arch/arm/boot/zImage artifacts/
          docker cp $container_id:/linux-build/arch/arm/boot/dts/sun8i-v3s-licheepi-zero.dtb artifacts/
          docker cp $container_id:/linux-build/out/lib/modules artifacts/
          
          # Create tar of modules
          cd artifacts
          tar -czf modules.tar.gz modules/
          rm -rf modules/
          
          # Create final archive
          tar -czf ../release-artifacts.tar.gz *
          cd ..
          
          # Cleanup
          docker rm $container_id

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true 
